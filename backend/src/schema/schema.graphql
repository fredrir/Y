type Query {
  getPosts(page: Int!): [Post!]!
  getPost(id: ID!): Post
  getComments(postID: ID!, page: Int!): [Comment!]!
  getUser(username: String!): User
  getUsers(page: Int!): [User!]!
  searchPosts(query: String!, page: Int!): [Post!]!
  searchUsers(query: String!): [User!]!
  getPostsByIds(ids: [ID!]!): [Post!]!
  getCommentsByIds(ids: [ID!]!): [Comment!]!
}

scalar Upload

type Post {
  id: ID!
  body: String!
  originalBody: String
  author: String!
  amtLikes: Int!
  amtComments: Int!
  createdAt: String!
  imageUrl: String
}

type Comment {
  id: ID!
  body: String!
  author: String!
  parentID: ID!
  amtLikes: Int!
  createdAt: String!
  imageUrl: String
}

type User {
  id: ID!
  username: String!
  postIds: [ID!]!
  likedPostIds: [ID!]!
  commentIds: [ID!]!
  following: [User!]!
  followers: [User!]!
  profilePicture: String
  backgroundPicture: String
}

type Mutation {
  createPost(body: String!, file: Upload): Post!
  editPost(id: ID!, body: String!, file: Upload): Post!
  createComment(body: String!, parentID: ID!, file: Upload): Comment!
  deletePost(id: ID!): Post!
  deleteComment(id: ID!): Comment!
  likePost(postID: ID!): Post!
  unlikePost(postID: ID!): Post!
  followUser(username: String!): User!
  unfollowUser(username: String!): User!
  register(username: String!, password: String!): String!
  login(username: String!, password: String!): String!
  changeProfilePicture(file: Upload!): User!
  changeBackgroundPicture(file: Upload!): User!
}
