type Query {
  getPosts(page: Int!): [Post!]!
  getPost(id: ID!): Post
  getComments(postID: ID!): [Comment!]!
  getUser(username: String!): User
  searchAll(query: String!): [SearchResult!]!
  searchUsers(query: String!): [User!]!
  getPostsByIds(ids: [ID!]!): [Post!]!
  getCommentsByIds(ids: [ID!]!): [Comment!]!
}

union SearchResult = User | Post

type Post {
  id: ID!
  body: String!
  author: String!
  amtLikes: Int!
  amtComments: Int!
  createdAt: String!
}

type Comment {
  id: ID!
  body: String!
  author: String!
  parentID: ID!
  amtLikes: Int!
  createdAt: String!
}

type User {
  id: ID!
  username: String!
  postIds: [ID!]!
  likedPostIds: [ID!]!
  commentIds: [ID!]!
  following: [User!]!
  followers: [User!]!
}

type Mutation {
  createPost(body: String!): Post!
  createComment(body: String!, parentID: ID!): Comment!
  deletePost(id: ID!): Post!
  deleteComment(id: ID!): Comment!
  likePost(postID: ID!): Post!
  unlikePost(postID: ID!): Post!
  followUser(username: String!): User!
  unfollowUser(username: String!): User!
  register(username: String!, password: String!): String!
  login(username: String!, password: String!): String!
}
